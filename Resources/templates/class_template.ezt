{use $schema, $tableName, $classPrefix}
<?php
// Autogenerated class file

namespace {$classPrefix};

{var $indent = '', $className = underScoreToCamelCase( $tableName ), $propertyNames = array(), $propertyTypes = array()}
{include 'generate_property_names.ezt' send $schema receive $propertyNames}
{include 'generate_php_property_types.ezt' send $schema receive $propertyTypes}
{include 'class_doc_block.ezt' send $className, $propertyNames, $propertyTypes}
class {$className}
\{
{foreach $schema->fields as $fieldName => $field}
{if true}{/if}    /**
{if true}{/if}     * {$propertyNames[$fieldName]}
{if true}{/if}     *
{if true}{/if}     * @var {$propertyTypes[$fieldName]}
{if true}{/if}     */
{if true}{/if}    public ${$propertyNames[$fieldName]};

{/foreach}
    /**
     * Set the PersistentObject state.
     *
     * @param array(string=>mixed) $state The state to set.
     * @return void
     */
    public function setState( array $state )
    \{
        foreach ( $state as $attribute => $value )
        \{
            $this->$attribute = $value;
        \}
    \}

    /**
     * Get the PersistentObject state.
     *
     * @return array(string=>mixed) The state of the object.
     */
    public function getState()
    \{
        return array(
{foreach $schema->fields as $fieldName => $field}
{if true}{/if}            '{$propertyNames[$fieldName]}' => $this->{$propertyNames[$fieldName]},
{/foreach}
        );
    \}
\}

{var $fileName = $className . '.php'}
{return $fileName}
